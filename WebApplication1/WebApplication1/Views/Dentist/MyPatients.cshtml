@using Kendo.Mvc.UI
@using WebApplication1.Models
@model IEnumerable<WebApplication1.Models.Patient>

@{
    ViewBag.Title = "My Patients";
}

<h2>My patients</h2>

<p style="text-decoration:underline">
    @Html.ActionLink("Create New Patient", "Create")
</p>

@using (@Html.BeginForm("MyPatients", "Dentist", FormMethod.Get))
{
    @*HTML helper way of input for search
    @Html.TextBox("searchString",null, new {id = "custom-search-input", @class = "form-control input"});*@

    <div class="container" style="padding-left:0px; padding-right:0px">
        <div class="row">
            <div class="col-md-3">
                <div id="custom-search-input">
                    <div class="input-group">
                        <input type="text" id="searchString" name="searchString" class="form-control input" placeholder="Search first and last name..." />
                        <span class="input-group-btn">
                            <button class="btn btn-info btn" type="button">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div style="overflow-x:auto;">
    <table class="table">
        <thead class="thead-inverse">
            <tr>
                <th>
                    @Html.ActionLink("First Name", "MyPatients", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Last Name", "MyPatients", new { sortOrder = ViewBag.LNameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Date of birth", "MyPatients", new { sortOrder = ViewBag.BDateSortParm })
                </th>
                <th>
                    @Html.ActionLink("Date Created", "MyPatients", new { sortOrder = ViewBag.DateSortParm })
                </th>
                <th style="color:#335381"></th>
            </tr>
        </thead>

        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td style="color:#335381">
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
</div>




@*@(Html.Kendo().Grid<PatientDTO>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.FirstName);
                columns.Bound(c => c.LastName);
                columns.Bound(c => c.BirthDate).Format("{0:d}");
                columns.Bound(c => c.DateCreated).Format("{0:d}");
                columns.Command(c => { c.Edit(); });
            })
            .HtmlAttributes(new { style = "height: 550px;" })
            .Scrollable()
            .Groupable()
            .Sortable()
            //.ClientDetailTemplateId("template")
            .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
            .Editable(editable => editable.Mode(GridEditMode.InLine))
            .DataSource(dataSource => dataSource
                .WebApi()
                .Model(model =>
                {
                    model.Id(p => p.Id);

                })
                .Events(events => events.Error("error_handler") )
                .Read(r => r.Url(Url.HttpRouteUrl("DefaultApi", new {controller = "Patients"})))
                .Create(create => create.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "Patients" })))
                .Update(update => update.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "Patients", id = "{0}"} )))

            )


    )

    <script>
        function error_handler(e) {
            var errors = $.parseJSON(e.xhr.responseText);

            if (errors) {
                alert("Errors:\n" + errors.join("\n"));
            }
        }
    </script>*@

@*<script id="template" type="text/kendo-tmpl">
        @(Html.Kendo().TabStrip()
                .Name("tabStrip_#=Id#")
                .SelectedIndex(0)
                .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
                .Items(items =>
                {
                    items.Add().Text("Orders").Content(@<text>
                         @(Html.Kendo().Grid<Patient>()
                                .Name("grid_#=Id#") // template expression, to be evaluated in the master context
                                .Columns(columns =>
                                {
                                    columns.Bound(o => o.FirstName).Title("ID").Width(56);
                                    columns.Bound(o => o.LastName).Width(110);
                                    columns.Bound(o => o.Address);//.ClientTemplate("\\#= ShipAddress \\#"); // escaped template expression, to be evaluated in the child/detail context
                                    columns.Bound(o => o.Email).Width(190);
                                })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(5)
                                    .Read(read => read.Action("PatientRead", "Dentist", new {Id = "#Id#" }))
                                )
                                .Pageable()
                                .Sortable()
                                .ToClientTemplate())
                        </text>
                        );
                    items.Add().Text("Contact Information").Content(
                        "<div class='patient-details'>" +
                            "<ul>" +
                                "<li><label>First Name:</label>#= FirstName #</li>" +
                                "<li><label>Last Name:</label>#= LastName #</li>" +
                                "<li><label>Address:</label>#= Address #</li>" +
                                "<li><label>Email:</label>#= Email #</li>" +
                            "</ul>" +
                        "</div>"

                        );
                })
                .ToClientTemplate())
    </script>*@






@*<script>
        function dataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }
    </script>

    <style>
        .k-detail-cell .k-tabstrip .k-content {
            padding: 0.2em;
        }

        .patient-details ul {
            list-style: none;
            font-style: italic;
            margin: 15px;
            padding: 0;
        }

            .patient-details ul li {
                margin: 0;
                line-height: 1.7em;
            }

        .patient-details label {
            display: inline-block;
            width: 90px;
            padding-right: 10px;
            text-align: right;
            font-style: normal;
            font-weight: bold;
        }
    </style>*@